add_test( [==[testing of parsing instruction lines]==] /home/samuel/Documents/helion-lang/build/test/catch_testing [==[testing of parsing instruction lines]==]  )
set_tests_properties( [==[testing of parsing instruction lines]==] PROPERTIES WORKING_DIRECTORY /home/samuel/Documents/helion-lang/build/test)
add_test( [==[testing of parsing instruction file lines]==] /home/samuel/Documents/helion-lang/build/test/catch_testing [==[testing of parsing instruction file lines]==]  )
set_tests_properties( [==[testing of parsing instruction file lines]==] PROPERTIES WORKING_DIRECTORY /home/samuel/Documents/helion-lang/build/test)
add_test( [==[testing of parsing instruction file]==] /home/samuel/Documents/helion-lang/build/test/catch_testing [==[testing of parsing instruction file]==]  )
set_tests_properties( [==[testing of parsing instruction file]==] PROPERTIES WORKING_DIRECTORY /home/samuel/Documents/helion-lang/build/test)
add_test( [==[testing of primary memory methods]==] /home/samuel/Documents/helion-lang/build/test/catch_testing [==[testing of primary memory methods]==]  )
set_tests_properties( [==[testing of primary memory methods]==] PROPERTIES WORKING_DIRECTORY /home/samuel/Documents/helion-lang/build/test)
add_test( [==[testing of projectile memory control/update methods]==] /home/samuel/Documents/helion-lang/build/test/catch_testing [==[testing of projectile memory control/update methods]==]  )
set_tests_properties( [==[testing of projectile memory control/update methods]==] PROPERTIES WORKING_DIRECTORY /home/samuel/Documents/helion-lang/build/test)
add_test( [==[testing of satellite memory control/update methods]==] /home/samuel/Documents/helion-lang/build/test/catch_testing [==[testing of satellite memory control/update methods]==]  )
set_tests_properties( [==[testing of satellite memory control/update methods]==] PROPERTIES WORKING_DIRECTORY /home/samuel/Documents/helion-lang/build/test)
add_test( [==[testing of interstellar memory control/update methods]==] /home/samuel/Documents/helion-lang/build/test/catch_testing [==[testing of interstellar memory control/update methods]==]  )
set_tests_properties( [==[testing of interstellar memory control/update methods]==] PROPERTIES WORKING_DIRECTORY /home/samuel/Documents/helion-lang/build/test)
add_test( [==[testing copy of memory pointers sharing object]==] /home/samuel/Documents/helion-lang/build/test/catch_testing [==[testing copy of memory pointers sharing object]==]  )
set_tests_properties( [==[testing copy of memory pointers sharing object]==] PROPERTIES WORKING_DIRECTORY /home/samuel/Documents/helion-lang/build/test)
add_test( [==[testing of uint8 bit order inversion]==] /home/samuel/Documents/helion-lang/build/test/catch_testing [==[testing of uint8 bit order inversion]==]  )
set_tests_properties( [==[testing of uint8 bit order inversion]==] PROPERTIES WORKING_DIRECTORY /home/samuel/Documents/helion-lang/build/test)
add_test( [==[testing of uint16 byte order inversion]==] /home/samuel/Documents/helion-lang/build/test/catch_testing [==[testing of uint16 byte order inversion]==]  )
set_tests_properties( [==[testing of uint16 byte order inversion]==] PROPERTIES WORKING_DIRECTORY /home/samuel/Documents/helion-lang/build/test)
add_test( [==[testing of uint32 byte order inversion]==] /home/samuel/Documents/helion-lang/build/test/catch_testing [==[testing of uint32 byte order inversion]==]  )
set_tests_properties( [==[testing of uint32 byte order inversion]==] PROPERTIES WORKING_DIRECTORY /home/samuel/Documents/helion-lang/build/test)
add_test( [==[testing of uint64 byte order inversion]==] /home/samuel/Documents/helion-lang/build/test/catch_testing [==[testing of uint64 byte order inversion]==]  )
set_tests_properties( [==[testing of uint64 byte order inversion]==] PROPERTIES WORKING_DIRECTORY /home/samuel/Documents/helion-lang/build/test)
add_test( [==[testing of valid memory identifiers]==] /home/samuel/Documents/helion-lang/build/test/catch_testing [==[testing of valid memory identifiers]==]  )
set_tests_properties( [==[testing of valid memory identifiers]==] PROPERTIES WORKING_DIRECTORY /home/samuel/Documents/helion-lang/build/test)
add_test( [==[testing of memory map internal memory]==] /home/samuel/Documents/helion-lang/build/test/catch_testing [==[testing of memory map internal memory]==]  )
set_tests_properties( [==[testing of memory map internal memory]==] PROPERTIES WORKING_DIRECTORY /home/samuel/Documents/helion-lang/build/test)
add_test( [==[testing of memory map external memory]==] /home/samuel/Documents/helion-lang/build/test/catch_testing [==[testing of memory map external memory]==]  )
set_tests_properties( [==[testing of memory map external memory]==] PROPERTIES WORKING_DIRECTORY /home/samuel/Documents/helion-lang/build/test)
add_test( [==[testing of char in list]==] /home/samuel/Documents/helion-lang/build/test/catch_testing [==[testing of char in list]==]  )
set_tests_properties( [==[testing of char in list]==] PROPERTIES WORKING_DIRECTORY /home/samuel/Documents/helion-lang/build/test)
add_test( [==[testing of parsing of delimited values]==] /home/samuel/Documents/helion-lang/build/test/catch_testing [==[testing of parsing of delimited values]==]  )
set_tests_properties( [==[testing of parsing of delimited values]==] PROPERTIES WORKING_DIRECTORY /home/samuel/Documents/helion-lang/build/test)
add_test( [==[testing of hexadecimal string validation]==] /home/samuel/Documents/helion-lang/build/test/catch_testing [==[testing of hexadecimal string validation]==]  )
set_tests_properties( [==[testing of hexadecimal string validation]==] PROPERTIES WORKING_DIRECTORY /home/samuel/Documents/helion-lang/build/test)
add_test( [==[testing of octal string validation]==] /home/samuel/Documents/helion-lang/build/test/catch_testing [==[testing of octal string validation]==]  )
set_tests_properties( [==[testing of octal string validation]==] PROPERTIES WORKING_DIRECTORY /home/samuel/Documents/helion-lang/build/test)
add_test( [==[testing of decimal string validation]==] /home/samuel/Documents/helion-lang/build/test/catch_testing [==[testing of decimal string validation]==]  )
set_tests_properties( [==[testing of decimal string validation]==] PROPERTIES WORKING_DIRECTORY /home/samuel/Documents/helion-lang/build/test)
add_test( [==[testing of simple value string validation]==] /home/samuel/Documents/helion-lang/build/test/catch_testing [==[testing of simple value string validation]==]  )
set_tests_properties( [==[testing of simple value string validation]==] PROPERTIES WORKING_DIRECTORY /home/samuel/Documents/helion-lang/build/test)
add_test( [==[testing of complex value string validation]==] /home/samuel/Documents/helion-lang/build/test/catch_testing [==[testing of complex value string validation]==]  )
set_tests_properties( [==[testing of complex value string validation]==] PROPERTIES WORKING_DIRECTORY /home/samuel/Documents/helion-lang/build/test)
add_test( [==[testing of conversion of value string to value]==] /home/samuel/Documents/helion-lang/build/test/catch_testing [==[testing of conversion of value string to value]==]  )
set_tests_properties( [==[testing of conversion of value string to value]==] PROPERTIES WORKING_DIRECTORY /home/samuel/Documents/helion-lang/build/test)
set( catch_testing_TESTS [==[testing of parsing instruction lines]==] [==[testing of parsing instruction file lines]==] [==[testing of parsing instruction file]==] [==[testing of primary memory methods]==] [==[testing of projectile memory control/update methods]==] [==[testing of satellite memory control/update methods]==] [==[testing of interstellar memory control/update methods]==] [==[testing copy of memory pointers sharing object]==] [==[testing of uint8 bit order inversion]==] [==[testing of uint16 byte order inversion]==] [==[testing of uint32 byte order inversion]==] [==[testing of uint64 byte order inversion]==] [==[testing of valid memory identifiers]==] [==[testing of memory map internal memory]==] [==[testing of memory map external memory]==] [==[testing of char in list]==] [==[testing of parsing of delimited values]==] [==[testing of hexadecimal string validation]==] [==[testing of octal string validation]==] [==[testing of decimal string validation]==] [==[testing of simple value string validation]==] [==[testing of complex value string validation]==] [==[testing of conversion of value string to value]==])
